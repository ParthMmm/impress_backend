generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // shadowDatabaseUrl = env("SHADOW_DB")
}

model User {
  id       String @id @default(uuid())
  username String @unique
  password String
  posts    Post[]
}

model Lube {
  id    Int    @id @default(autoincrement())
  name  String @unique
  posts Post[]
}

model Film {
  id    Int    @id @default(autoincrement())
  name  String @unique
  posts Post[]
}

model Type {
  id    Int    @id @default(autoincrement())
  name  String @unique
  posts Post[]
}

model Post {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  title       String
  description String
  authorId    String
  file_       String
  dislikes    Int      @default(0)
  likes       Int      @default(0)
  author      User     @relation(fields: [authorId], references: [id])
  film        Film     @relation(fields: [filmId], references: [id])
  lube        Lube     @relation(fields: [lubeId], references: [id])
  type        Type     @relation(fields: [typeId], references: [id])
  filmId      Int
  lubeId      Int
  typeId      Int
}

// model FilmOnPosts {

//   Film   Film?  @relation(fields: [filmId], references: [id])
//   filmId Int
//   Post   Post?  @relation(fields: [postId], references: [id])
//   postId String

//   @@id([postId, filmId])
// }

// model PostTags {
//   id     String @id @default(uuid())
//   type   String
//   lube   String
//   film   String
//   postId String
//   Post   Post   @relation(fields: [postId], references: [id])
// }
